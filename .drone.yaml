---
kind: pipeline
name: Build Drone OSS

platform:
  os: linux
  arch: amd64

steps:

  - name: Clone drone repo
    image: docker:git
    commands:
      - git clone --recursive https://github.com/drone/drone.git drone
      - (cd drone && git checkout $(cat ../VERSION))

  - name: Compile Drone OSS
    image: golang:1.14
    environment:
      CGO_ENABLED: 1
      GO111MODULE: on
      GOARCH: amd64
      GOOS: linux
      GOPROXY: https://proxy.golang.org,direct
    commands:
      - version=''
      - if [ $DRONE_BRANCH = 'development' ]; then version='-development'; fi
      - echo $version
      - (cd drone && ../build.sh "oss nolimit")
      - (cd drone && ../tags.sh $version ) > .tags
      - cat .tags

  - name: Docker build & push
    image: plugins/docker
    settings:
      mirror: dockerhub.nexus.diesel.net
      registry: docker.nexus.diesel.net
      username:
        from_secret: nexus_user
      password:
        from_secret: nexus_pass
      context: drone
      dockerfile: drone/docker/Dockerfile.server.linux.amd64
      repo: docker.nexus.diesel.net/drone-oss
      purge: false

trigger:
  branch:
    - development
    - stable
  event:
    - push

---
kind: pipeline
name: Build Drone Enterprise (without limits)

platform:
  os: linux
  arch: amd64

steps:
  
  - name: Clone drone repo
    image: docker:git
    commands:
      - git clone --recursive https://github.com/drone/drone.git drone
      - (cd drone && git checkout $(cat ../VERSION))

  - name: Compile Drone Enterprise
    image: golang:1.14
    environment:
      CGO_ENABLED: 1
      GO111MODULE: on
      GOARCH: amd64
      GOOS: linux
      GOPROXY: https://proxy.golang.org,direct
    commands:
      - version=''
      - if [ $DRONE_BRANCH = 'development' ]; then version='-development'; fi
      - echo $version
      - (cd drone && ../build.sh "nolimit")
      - (cd drone && ../tags.sh $version ) > .tags

  - name: Docker build & push
    image: plugins/docker
    settings:
      mirror: dockerhub.nexus.diesel.net
      registry: docker.nexus.diesel.net
      username:
        from_secret: nexus_user
      password:
        from_secret: nexus_pass
      context: drone
      dockerfile: drone/docker/Dockerfile.server.linux.amd64
      repo: docker.nexus.diesel.net/drone-nolimit
      purge: false

trigger:
  branch:
    - development
    - stable
  event:
    - push
